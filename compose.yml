version: '3.8'

services:
  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  users:
    container_name: users
    build:
      context: ./users
      dockerfile: Dockerfile
    volumes:
      - ./users:/code
      - ./shared:/code/shared
    depends_on:
      - broker
      - db-service
    ports:
      - "8011:8000"

  products:
    container_name: products
    build:
      context: ./products
      dockerfile: Dockerfile
    volumes:
      - ./products:/code
      - ./shared:/code/shared
      - product_images:/code/upload_images
    depends_on:
      - broker
      - db-service
    ports:
      - "8012:8000"

  db-service:
    container_name: db-service
    build:
      context: ./db-service
      dockerfile: Dockerfile
    volumes:
      - ./db-service:/code
      - ./shared:/code/shared
    depends_on:
      - postgres
      - broker
    ports:
      - "8013:8000"

  authentication:
      container_name: authentication
      build:
        context: ./authentication
        dockerfile: Dockerfile
      volumes:
        - ./authentication:/code
        - ./shared:/code/shared
      depends_on:
        - postgres
        - broker
      ports:
        - "8014:8000"

  category:
    container_name: category
    build:
      context: ./category
      dockerfile: Dockerfile
    volumes:
      - ./category:/code
      - ./shared:/code/shared
    depends_on:
      - broker
      - db-service
    ports:
      - "8015:8000"

  brand:
    container_name: brand
    build:
      context: ./brand
      dockerfile: Dockerfile
    volumes:
      - ./brand:/code
      - ./shared:/code/shared
    depends_on:
      - broker
      - db-service
    ports:
      - "8016:8000"

  order:
    container_name: order
    build:
      context: ./order
      dockerfile: Dockerfile
    volumes:
      - ./order:/code
      - ./shared:/code/shared
    depends_on:
      - broker
      - db-service
    ports:
      - "8017:8000" 

  payment:
    container_name: payment
    build:
      context: ./payment
      dockerfile: Dockerfile
    volumes:
      - ./payment:/code
      - ./shared:/code/shared
    depends_on:
      - broker
      - db-service
      - order
    ports:
      - "8018:8000"

  notification:
    container_name: notification
    build:
      context: ./notification
      dockerfile: Dockerfile
    volumes:
      - ./notification:/code
      - ./shared:/code/shared
    depends_on:
      - broker
      - db-service
      - payment
    ports:
      - "8019:8000"

  inventory:
    container_name: inventory
    build:
      context: ./inventory
      dockerfile: Dockerfile
    volumes:
      - ./inventory:/code
      - ./shared:/code/shared
    depends_on:
      - broker
      - db-service
      - payment
    ports:
      - "8020:8000"

  customer:
    container_name: customer
    build:
      context: ./customer
      dockerfile: Dockerfile
    volumes:
      - ./customer:/code
      - ./shared:/code/shared
    depends_on:
      - broker
      - db-service
    ports:
      - "8021:8000"
  
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker

  postgres:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: PostgresCont
    environment:
        - POSTGRES_USER=imtiaz
        - POSTGRES_PASSWORD=as
        - POSTGRES_DB=imtiaz
    ports:
        - '5433:5432'
    volumes:
        - postgres_db:/var/lib/postgresql/data

  pg-admin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=bilalmk@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=as
    ports:
      - "5050:80"
    depends_on:
      - postgres
    # volumes:
    #   - E:\piaic\projects\db_backup:/var/lib/pgadmin/storage

  # curl-test:
  #   image: curlimages/curl:latest
  #   container_name: curl-test
  #   depends_on:
  #     - db-service
  #   command: ["sh", "-c", "while true; do curl -v db-service:8000; sleep 5; done"]      

networks:
  default:  
    driver: bridge

volumes:
  product_images:

  postgres_db:
    driver: local  

  shared-data:
    driver: local
    driver_opts:
      type: 'none'
      device: './shared'  # Path to your shared directory
      o: 'bind'